#!/usr/bin/env python
import argparse
import json
import sarif_cli as S
import re
import sys
import collections

parser = argparse.ArgumentParser(description='summary of results')
parser.add_argument('file', metavar='sarif-file', type=str, help='input file, - for stdin')
parser.add_argument('-s', '--list-source', metavar='srcroot', type=str,
                    help='list source snippets using srcroot as sarif SRCROOT')
parser.add_argument('-r', '--related-locations', action="store_true",
                    help='list related locations like "hides [parameter](1)"')

args = parser.parse_args()
with open(args.file, 'r') if args.file != '-' else sys.stdin as fp:
    sarif_struct = json.load(fp)

for runi in S.indices(sarif_struct, 'runs'):
    num_results = len(S.get(sarif_struct, 'runs', runi, 'results'))
    language = S.get(sarif_struct, 'runs', runi, 'properties',
                     'semmle.sourceLanguage')
    S.msg("Found %d results for %s\n" %  (num_results, language))
    if num_results == 0: continue
    # 
    for resi in S.indices(sarif_struct, 'runs', runi, 'results'):
        result = S.get(sarif_struct, 'runs', runi, 'results', resi)
        message, artifact, region = S.get_location_message_info(result)
        l1, c1, l2, c2 = S.lineinfo(region)
        filepath = "%s:%d:%d:%d:%d" % (artifact['uri'], l1, c1, l2, c2)
        S.msg("%s: %s\n\n" % (filepath, message))
        if args.list_source:
            lines = S.load_lines(args.list_source, artifact['uri'], l1, l2)
            for line, line_num in zip(lines, range(l1, l2+1)):
                S.display_underlined(l1, c1, l2, c2, line, line_num)
        if args.related_locations:
            # Full path: S.get(sarif_struct, 'runs', runi, 'results', resi, 'relatedLocations')
            relatedLocations = result.get('relatedLocations', None)
            if type(relatedLocations) == list:
                # Linking is explicit in output, so no need to get id(s) from message string.
                for relo_i in S.indices(relatedLocations):
                    message = S.get(relatedLocations, relo_i, 'message', 'text')
                    artifact = S.get(relatedLocations, relo_i, 'physicalLocation', 'artifactLocation')
                    region = S.get(relatedLocations, relo_i, 'physicalLocation', 'region')
                    l1, c1, l2, c2 = S.lineinfo(region)
                    filepath = "%s:%d:%d:%d:%d" % (artifact['uri'], l1, c1, l2, c2)
                    S.msg("info: %s: %s\n\n" % (filepath, message))
                    if args.list_source:
                        lines = S.load_lines(args.list_source, artifact['uri'], l1, l2)
                        for line, line_num in zip(lines, range(l1, l2+1)):
                            S.display_underlined(l1, c1, l2, c2, line, line_num)
        S.msg("\n")
