#!/usr/bin/env python
import argparse
import json
import sarif_cli as S
import sys
import collections

parser = argparse.ArgumentParser(description='summary of results')
parser.add_argument('file', metavar='sarif-file', type=str, help='input file, - for stdin')

args = parser.parse_args()
with open(args.file, 'r') if args.file != '-' else sys.stdin as fp:
    sarif_struct = json.load(fp)

for runi in S.indices(sarif_struct, 'runs'):
    num_results = len(S.get(sarif_struct, 'runs', runi, 'results'))
    language = S.get(sarif_struct, 'runs', runi, 'properties',
                     'semmle.sourceLanguage')
    S.msg("Found %d results for %s \n\n" %  (num_results, language))
    if num_results == 0: continue

    for resi in S.indices(sarif_struct, 'runs', runi, 'results'):
        message = S.get(sarif_struct, 'runs', runi, 'results', resi, 'message', 'text')
        artifact = S.get(sarif_struct, 'runs', runi, 'results', resi, 'locations', 0,
                         'physicalLocation', 'artifactLocation')
        region = S.get(sarif_struct, 'runs', runi, 'results', resi, 'locations', 0,
                         'physicalLocation', 'region')
        filepath = "%s:%d:%d" % (artifact['uri'], region['startLine'],
                                 region.get('startColumn', -1)) 
        S.msg("%s: %s\n" % (filepath, message))
